spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/food_reserve_db  # Update with your DB details
    username: postgres
    password: kchsdk10
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: update  # Use 'update' for dev, 'validate' or 'none' for production
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  data:
    jpa:
      repositories:
        enabled: true
  jackson:
    serialization:
      write-dates-as-timestamps: false
  port: 8080

# Flyway Configuration
  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    validate-on-migrate: true
    out-of-order: true  # Add this line

logging:
  level:
    root: INFO
    me.hajk1.foodreservation.security: INFO
    org.springframework.security.crypto.bcrypt: INFO
    org:
      springframework:
        web: INFO
        security: INFO
      hibernate:
        SQL: INFO
        type:
          descriptor:
            sql:
              BasicBinder: INFO

# OpenAPI/Swagger Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    operationsSorter: method
    tryItOutEnabled: true
    enabled: true
  show-actuator: true
  default-produces-media-type: application/json

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

# JWT Configuration
jwt:
  secret: your_jwt_secret_key_should_be_at_least_256_bits_long_for_security
  expiration: 86400

# Debug Configuration
debug: true
trace: false

api:
  base-url: http://localhost:8080